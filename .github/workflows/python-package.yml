# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

defaults:
  run:
    shell: bash

jobs:
  build:

    strategy:
      # fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8, 3.9, "3.10"]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}

      # Windows is a piece of shit! I cannot believe that I am unable to set
      # some basic params to update the PATH.
      - name: Set up Python Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true

      - name: Set up Cache
        uses: actions/cache@v3
        id: cache-deps
        with:
          path: .venv
          key: |
            venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 --count --show-source --statistics

      - name: Test and Generate Coverage Report
        run: |
          poetry run pytest -n auto -d --cov=pyflocker/ --cov-report=xml --cov-branch

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v3
        # Upload only using `ubuntu-latest`. macos uploader is failing.
        if: matrix.os == 'ubuntu-latest'
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          verbose: true
          files: ./coverage.xml
          fail_ci_if_error: true
