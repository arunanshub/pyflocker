name: CI

on:
  push:
    branches: [master]
    tags: ["v*.*.*"]
  pull_request:
    branches: [master]

defaults:
  run:
    shell: bash

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Poetry
        run: pipx install poetry

      - name: Install Python
        uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version: ">=3.8"
          cache: poetry

      - name: Install dependencies
        run: poetry install

      - name: Cache Pre-Commit Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Lint with Mypy and Flake8
        run: |
          poetry run pre-commit run -a mypy
          poetry run pre-commit run -a ruff

  build:
    needs: [lint]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8, 3.9, "3.10", "3.11"]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Install Poetry
        run: |
          pipx install poetry
          poetry config virtualenvs.in-project true

      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Install Dependencies
        run: poetry install

      - name: Test and Generate Coverage Report
        run: |
          poetry run pytest -n auto -d --cov=src/ --cov-report=lcov --cov-branch --durations=20
        env:
          HYPOTHESIS_PROFILE: ci

      - name: Upload Coverage Report
        uses: coverallsapp/github-action@v2.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: "./coverage.lcov"
          parallel: true
          flag-name: run-${{ matrix.os }}-python-${{ matrix.python-version }}

  finish-coverage:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Finish Coverage Report
        uses: coverallsapp/github-action@v2.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

  publish:
    needs: [build, finish-coverage]
    runs-on: ubuntu-latest
    if: ${{ github.ref_type == 'tag' }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install commitizen
        run: pipx install commitizen

      - name: Get 2nd-last commit tag
        id: second-last
        run: |
          tags="$(git tag --sort=creatordate)"
          output=''
          # length > 1 means we have multiple tags and we need 2nd last one
          if [[ "$(echo "$tags" | grep -c ^)" != "1" ]]; then
            output="$(echo "$tags" | tail -2 | head -1)"
          fi
          echo "tag=$output" >> "$GITHUB_OUTPUT"

      - name: Generate Changelog
        run: |
          # from 2nd-last revision upto this current tag.
          cz ch --start-rev '${{ steps.second-last.outputs.tag }}' \
            --unreleased-version '${{ github.ref_name }}' \
            --file-name body.md

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: body.md
          tag_name: ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Poetry
        run: pipx install poetry

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '>=3.8'
          cache: 'poetry'

      - name: Publish Package
        run: poetry publish --build -u __token__ -p "$PYPI_PASSWORD"
        env:
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
