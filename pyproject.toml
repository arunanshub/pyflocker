[tool.poetry]
name = "PyFLocker"
version = "0.4.1"
description = "Python Cryptographic (File Locking) Library"
authors = ["Arunanshu Biswas <mydellpc07@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/arunanshub/pyflocker"
documentation = "https://pyflocker.readthedocs.io"
keywords = ["cryptography", "symmetric", "asymmetric", "aead", "rsa"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Intended Audience :: Developers",
  "Topic :: Security :: Cryptography",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/arunanshub/pyflocker/issues"
"Changelog" = "https://github.com/arunanshub/pyflocker/blob/master/CHANGELOG.md"

[tool.poetry.dependencies]
python = "^3.8"
pycryptodomex = "^3.9.8"
cryptography = { version = ">=35.0.0,!=37.0.0", extras = ["ssh"] }

# Pre-commit hooks
[tool.poetry.group.dev.dependencies]
pre-commit = "^3.0.0"
commitizen = "^3.0.0"
mypy = "^1.0.1"

# Testing dependencies
[tool.poetry.group.test.dependencies]
pytest = "^7.1.2"
pytest-cov = "^4.0.0"
pytest-xdist = "^3.0.0"
pytest-randomly = "^3.12.0"
hypothesis = "^6.50.1"

# Docs dependencies
[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
Sphinx = "^7.0.0"
sphinx-copybutton = "^0.5.0"
furo = ">=2022.2.14"

# Debugging dependencies
[tool.poetry.group.debugging]
optional = true

[tool.poetry.group.debugging.dependencies]
pdbpp = "^0.10.3"
pyreadline3 = { version = "^3.4.1", markers = "sys_platform == 'win32'" }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# semver commits
[tool.commitizen]
name = "cz_conventional_commits"
version = "0.4.1"
tag_format = "v$version"
update_changelog_on_bump = true
changelog_incremental = true
annotated_tag = true
changelog_start_rev = "v0.3.0"
version_files = [
  "pyproject.toml",
  "src/pyflocker/__init__.py",
]

# testing and coverage
[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING",
  "if typing.TYPE_CHECKING",
]

[tool.pytest.ini_options]
addopts = "--strict-config --strict-markers"

# linting and Development
[tool.black]
line-length = 79
target-verson = "py38"

[tool.mypy]
python_version = "3.10"
warn_unused_configs = true
warn_unused_ignores = true

show_error_codes = true
pretty = true

warn_redundant_casts = true
# warn_return_any = true
no_implicit_optional = true
check_untyped_defs = true
disallow_untyped_defs = true
disallow_any_unimported = true

[tool.ruff]
line-length = 79
target-version = "py38"
exclude = [
  "docs",
  "tests",
]
ignore = ["ANN101", "ANN102", "ANN401", "B024"]
select = [
  "ANN",
  "B",
  "E",
  "F",
  "W",
  "I",
  "RET",
  "EM",
  "UP",
  "C90",
  "TCH",
  "SIM",
  # "PLR",
  "PIE",
]

[tool.ruff.isort]
required-imports = ["from __future__ import annotations"]
combine-as-imports = true
force-wrap-aliases = true
