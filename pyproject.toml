[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry]
name = "PyFLocker"
version = "0.0.0" # placeholder which is ultimately replaced by poetry-dynamic-versioning
description = "Python Cryptographic (File Locking) Library"
authors = ["Arunanshu Biswas <mydellpc07@gmail.com>"]
license = "MIT"
readme = "README.md"
include = [
  # include generated version file in the wheel
  { path = "src/pyflocker/_version.py", format = ["sdist", "wheel"] },
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/arunanshub/pyflocker/issues"
Changelog = "https://github.com/arunanshub/pyflocker/blob/master/CHANGELOG.md"
documentation = "https://pyflocker.readthedocs.io"
repository = "https://github.com/arunanshub/pyflocker"

[tool.poetry.dependencies]
python = ">=3.9"
pycryptodomex = ">=3.9.8"
cryptography = { version = ">=35.0.0, <37.0.0 || >37.0.0", extras = ["ssh"] }

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.0.0"
commitizen = "^4.0.0"
mypy = "^1.10.0"
ruff = "^0.9.0"

[tool.poetry.group.debugging.dependencies]
pdbpp = "^0.10.3"

[tool.poetry.group.docs.dependencies]
furo = "^2024.5.6"
sphinx = { version = "^8.0.0", python = ">=3.10" }
sphinx-copybutton = "^0.5.2"

[tool.poetry.group.test.dependencies]
pytest = "^8.2.0"
pytest-cov = "^6.0.0"
pytest-xdist = "^3.6.1"
pytest-randomly = "^3.15.0"
pytest-sugar = "^1.0.0"
hypothesis = "^6.100.5"

# ======================= Other tools ================================
[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "pep440"
bump = true

[tool.poetry-dynamic-versioning.substitution]
# the package is located inside `src/`
folders = [{ path = "src" }]

[tool.poetry-dynamic-versioning.files."src/pyflocker/_version.py"]
persistent-substitution = true
initial-content = """
# this file is auto @generated

__version__ = "0.0.0"
"""

[tool.commitizen]
annotated_tag = true
changelog_incremental = true
changelog_start_rev = "v0.3.0"
name = "cz_conventional_commits"
tag_format = "v$version"
update_changelog_on_bump = true
version = "0.4.2"

# testing and coverage
[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING",
  "if typing.TYPE_CHECKING",
]

[tool.pytest.ini_options]
addopts = "--strict-config --strict-markers"

[tool.mypy]
python_version = "3.9"
warn_unused_configs = true
warn_unused_ignores = true

pretty = true
show_error_codes = true

warn_redundant_casts = true
# warn_return_any = true
check_untyped_defs = true
disallow_any_unimported = true
disallow_untyped_defs = true
no_implicit_optional = true

[tool.ruff.lint]
exclude = ["docs/*", "tests/*", "src/pyflocker/_version.py"]
select = [
  "ANN",
  "B",
  "E",
  "F",
  "W",
  "I",
  "RET",
  "EM",
  "UP",
  "C90",
  "TCH",
  "SIM",
  "PIE",
  "TID",
]
ignore = ["ANN101", "ANN102", "ANN401", "B024"]

[tool.ruff]
line-length = 80
target-version = "py39"

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
required-imports = ["from __future__ import annotations"]
